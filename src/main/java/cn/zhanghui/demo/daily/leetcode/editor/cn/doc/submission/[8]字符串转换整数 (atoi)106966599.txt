class Solution {
    public int myAtoi(String str) {
                        if("".equals(str)){
            return 0;
        }
                
                int i =0;

        while(i < str.length() && str.charAt(i) == ' '){
            i++;
        }

        if(i >= str.length()){
            return 0;
        }

        char s_i = str.charAt(i);

        if(s_i != '+' && s_i != '-' && !Character.isDigit(s_i)){
            return 0;
        }

        StringBuilder sb = new StringBuilder();
        sb.append(s_i);
         
          boolean hasNotZero = Character.isDigit(str.charAt(i)) && str.charAt(i) > '0';
i++;
        while(i < str.length() && Character.isDigit(str.charAt(i))){
                       if(str.charAt(i) > '0'){
                hasNotZero = true;
            }
            if(hasNotZero) {
                sb.append(str.charAt(i));
            }
            i++;
        }

        String sbString = sb.toString();

                if("+".equals(sbString) || "-".equals(sbString)){
            return 0;
        }

        if(sbString.length() > 11){
            if(sbString.startsWith("-")){
                return Integer.MIN_VALUE;
            }else{
                return Integer.MAX_VALUE;
            }
        }else{
            long sbLong = Long.valueOf(sbString);

            if(sbLong > Integer.MAX_VALUE){
                return Integer.MAX_VALUE;
            }else if(sbLong < Integer.MIN_VALUE){
                return Integer.MIN_VALUE;
            }else{
                return (int)sbLong;
            }
        }
    }
}
//runtime:5 ms
//memory:39.1 MB
