class Solution {

    public String longestPalindrome(String target) {
                int n = target.length();

        boolean[][] dp = new boolean[n][n];

        String ans = "";

        for (int l = 0; l < n; l++) {

            for (int i = 0; i + l < n; i++) {

                int j = i + l;
                if (l == 0) {
                    dp[i][j] = true;
                } else if (l == 1) {
                    dp[i][j] = target.charAt(i) == target.charAt(j);
                } else {
                    dp[i][j] = (target.charAt(i) == target.charAt(j)) && dp[i + 1][j - 1];
                }

                if (dp[i][j] && l + 1 > ans.length()) {
                    ans = target.substring(i, j + 1);
                }
            }
        }
        return ans;
    }
}
//runtime:418 ms
//memory:44.6 MB
