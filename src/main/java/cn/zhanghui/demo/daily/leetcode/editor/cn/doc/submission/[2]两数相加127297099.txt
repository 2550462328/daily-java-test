/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
                ListNode dummyHead = new ListNode(0);
        // 进位
        int carry = 0;
        ListNode pNode1 = l1, pNode2 = l2, currNode = dummyHead;

        while (pNode1 != null || pNode2 != null) {
            int p1_val = pNode1 == null ? 0 : pNode1.val;
            int p2_val = pNode2 == null ? 0 : pNode2.val;

            int sum = p1_val + p2_val+ carry;

            int curr_val = sum % 10;
            carry = sum / 10;

            currNode.next = new ListNode(curr_val);
            currNode = currNode.next;

            if(pNode1 != null) {
                pNode1 = pNode1.next;
            }

            if(pNode2 != null) {
                pNode2 = pNode2.next;
            }
        }

        if(carry > 0){
            currNode.next = new ListNode(carry);
        }

        return dummyHead.next;
    }
}
//runtime:2 ms
//memory:38.7 MB
