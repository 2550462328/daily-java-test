### 解题思路

将num从1000开始除，记录对应罗马数字数量，保存在二维数组，其中数组里面分别存放罗马对应大小，对应数字数量，以及特殊罗马数字。
通过一个for循环，拆分完成，可以发现罗马数字是按2倍，5倍，递增的。
通过al[j+1][0]*al[j+1][1]+al[j+2][0]+al[j+2][0]*al[j+2][1]可以判断是否为特殊罗马数字，并记录在对应al[j][2]中，最后通过对其al[j][1]和al[j][2]的数量判断进行先后打印

### 代码

* java

```java
class Solution {
    public String intToRoman(int num) {
      int[][] al = new int[][]{{1000,0,0},{500,0,0},{100,0,0},{50,0,0},{10,0,0},{5,0,0},{1,0,0}};
        char[] sl = new char[]{'M','D','C','L','X','V','I'};
        for(int i = 0; i<7; i++){
            int t=num/al[i][0];
            num=num-t*al[i][0];
            al[i][1]=t;
        }
        for (int j = 0; j <6 ; j++) {
            if(al[j][0] == 2 * al[j+1][0]){
                if(al[j][0] == al[j+1][0]*al[j+1][1]+al[j+2][0]+al[j+2][0]*al[j+2][1]){
                    al[j+1][1]=0;
                    al[j+2][1]=0;
                    al[j][2]=1;
                }
            }
            else {
                if(al[j][0] == al[j+1][0]*al[j+1][1]+al[j+1][0]){
                    al[j+1][1]=0;
                    al[j][2]=1;
                }
            }
        }
        StringBuffer s =new StringBuffer();
        for (int i = 0; i <7 ; i++) {
            int ti=al[i][1];
            for (int j = 0; j <ti ; j++) {
                s.append(sl[i]);
            }
            if (al[i][2]==1){
                if(al[i][0] == 2 * al[i+1][0])s.append(sl[i+2]);
                else s.append(sl[i+1]);
                s.append(sl[i]);
            }
        }
        return s.toString();
    }
}
```

