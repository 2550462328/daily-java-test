class Solution {
    public List<List<Integer>> threeSum(int[] nums) {

                Arrays.sort(nums);
        int n = nums.length;
        List<List<Integer>> ans = new ArrayList<List<Integer>>();

        for (int first = 0; first < n; first++) {

            if (first > 0 && nums[first] == nums[first - 1]) {
                continue;
            }

            int third = n - 1;
            int target = -nums[first];


            for(int second = first + 1; second < n ;second++){

                if(second > first + 1 && nums[second] == nums[second-1]){
                    continue;
                }

                while(second < third && nums[second] + nums[third] > target){
                    third--;
                }

                if(second == third){
                    break;
                }
                if(nums[second] + nums[third] == target){

                    List<Integer> findList = new ArrayList<>();
                    findList.add(nums[first]);
                    findList.add(nums[second]);
                    findList.add(nums[third]);

                    ans.add(findList);
                }
            }
        }
        return ans;
    }


}
//runtime:30 ms
//memory:42.6 MB
